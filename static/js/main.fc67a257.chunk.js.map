{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressKey","ev","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAKEC,SAAW,SAACC,GACV,EAAKC,SAAS,CACZH,WAAW,4BAAD,OAA8BE,EAAGE,IAAjC,QAPhB,uDAWE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,YAZ5C,kCAeE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,YAhB/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,KAAKR,MAAMC,mBAtBhD,GAAyBU,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.fc67a257.chunk.js","sourcesContent":["/* eslint-disable react/sort-comp */\n/* eslint-disable react/jsx-wrap-multilines */\nimport React from 'react';\n\ninterface State {\n  pressedKey: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  pressKey = (ev: KeyboardEvent) => {\n    this.setState({\n      pressedKey: `The last pressed key is [${ev.key}]`,\n    });\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressKey);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}